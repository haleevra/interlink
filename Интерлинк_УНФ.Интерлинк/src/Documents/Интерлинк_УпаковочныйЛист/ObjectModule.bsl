
Процедура ОбработкаПроведения(Отказ, РежимПроведения)	
	//НаборЗаписей = РегистрыСведений.Интерлинк_УпаковочныеЛисты.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.НомерСТС.Использование = Истина;
	//НаборЗаписей.Отбор.НомерСТС.ВидСравнения = ВидСравнения.Равно;
	//НаборЗаписей.Отбор.НомерСТС.Значение = НомерСТС;
	//НаборЗаписей.Записывать = Истина;
	//
	//Для Каждого СтрокаКРазмещению Из ТоварыКРазмещению Цикл
	//	Запись = НаборЗаписей.Добавить();
	//	ЗаполнитьЗначенияСвойств(Запись, СтрокаКРазмещению);
	//	Запись.Паллета = 0;
	//КонецЦикла;
	//
	//Для Каждого СтрокаНаПаллетах Из ТоварыНаПаллетах Цикл
	//	Запись = НаборЗаписей.Добавить();
	//	ЗаполнитьЗначенияСвойств(Запись, СтрокаНаПаллетах);
	//КонецЦикла;
	//
	//НаборЗаписей.Записать(Истина);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Попытка
			Для Каждого СтрокаДокументов Из СписокДокументов Цикл
				ТекущийЗаказ = СтрокаДокументов.ЗаказПокупателя.ПолучитьОбъект();
				ЗаписыватьЗаказ = Ложь;
				Если ТекущийЗаказ.ДатаОтгрузки <> НачалоДня(Дата) Тогда
					ТекущийЗаказ.ДатаОтгрузки = НачалоДня(Дата);
					ЗаписыватьЗаказ = Истина;
				КонецЕсли;
				
				Если ТекущийЗаказ.ОжидаемаяДатаВручения <> ОжидаемаяДатаВручения Тогда
					ТекущийЗаказ.ОжидаемаяДатаВручения = ОжидаемаяДатаВручения;
					ЗаписыватьЗаказ = Истина;
				КонецЕсли;
				
				Если ТекущийЗаказ.ВремяДоставкиС <> ВремяДоставкиС Тогда
					ТекущийЗаказ.ВремяДоставкиС = ВремяДоставкиС;
					ЗаписыватьЗаказ = Истина;
				КонецЕсли;
				
				Если ЗаписыватьЗаказ Тогда
					ТекущийЗаказ.Записать();
				КонецЕсли;
				
				ЗаписыватьНакладную = Ложь;
				Если ЗначениеЗаполнено(СтрокаДокументов.РасходнаяНакладная) Тогда
					ТекущаяНакладная = СтрокаДокументов.РасходнаяНакладная.ПолучитьОбъект();
				Иначе
					ТекущаяНакладная = Документы.РасходнаяНакладная.СоздатьДокумент();
					ТекущаяНакладная.Заполнить(ТекущийЗаказ.Ссылка);
					ТекущаяНакладная.Дата = Дата;
					ТекущаяНакладная.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
					ЗаписыватьНакладную = Истина;
				КонецЕсли;
				
				ОснованиеПечати = СтрШаблон("Договор №%1 от %2, Заказ №%3 от %4", ТекущийЗаказ.Договор.НомерДоговора, Формат(ТекущийЗаказ.Договор.ДатаДоговора, "ДЛФ=D"),
																					ТекущийЗаказ.НомерВходящегоДокумента, Формат(ТекущийЗаказ.ДатаВходящегоДокумента, "ДЛФ=D"));

				Если ТекущаяНакладная.ОснованиеПечати <> ОснованиеПечати Тогда
					ТекущаяНакладная.ОснованиеПечати = ОснованиеПечати;
					ЗаписыватьНакладную = Истина;
				КонецЕсли;
				
				Если ТекущаяНакладная.Перевозчик <> Перевозчик Тогда
					ТекущаяНакладная.Перевозчик = Перевозчик;
					ЗаписыватьНакладную = Истина;
				КонецЕсли;
				
				Если ЗаписыватьНакладную Тогда
					ТекущаяНакладная.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаДокументов.РасходнаяНакладная) Тогда
					СтрокаДокументов.РасходнаяНакладная = ТекущаяНакладная.Ссылка;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаДокументов.СчетФактура) Тогда
					ТекущаяСчетФактура = Документы.СчетФактура.СоздатьДокумент();
					ТекущаяСчетФактура.Заполнить(ТекущаяНакладная.Ссылка);
					ТекущаяСчетФактура.Дата = Дата;
					ТекущаяСчетФактура.Записать(РежимЗаписиДокумента.Проведение);
					СтрокаДокументов.СчетФактура = ТекущаяСчетФактура.Ссылка;
				КонецЕсли;			
			КонецЦикла;
		Исключение
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
